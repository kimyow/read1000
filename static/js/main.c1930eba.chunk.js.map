{"version":3,"sources":["firebase/features.js","const.js","components/Signin.js","components/UserImageItem.js","components/UserImageList.js","App.js","reportWebVitals.js","redux/store.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fbDB","getAnalytics","getFirestore","fbAuth","getAuth","fbStorage","getStorage","googleAuthProvider","GoogleAuthProvider","SCREEN_MODE_SIGN_IN","SCREEN_MODE_USER_RANK","ACTION_CHANGE_MODE","ACTION_USER_RANK_DATA_RECEIVED","Signin","mode","useSelector","state","dispatch","useDispatch","console","log","className","onClick","signInWithPopup","then","result","credentialFromResult","accessToken","user","type","catch","error","errorCode","code","errorMessage","message","email","credential","credentialFromError","UserImageItem","userItem","useState","imageUrl","setImageUrl","useEffect","storageRef","ref","profileId","getDownloadURL","value","read","src","alt","a","q","query","collection","where","orderBy","limit","getDocs","LoadData","queryCallAsync","r","userRanks","forEach","doc","data","push","userRankList","UserImageList","userItems","i","length","_data","item","currentUser","App","authUser","setAuthUser","unlisten","onAuthStateChanged","useFirebaseAuthentication","signOut","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reduxStore","createStore","action","undefined","newState","Object","assign","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"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","file":"static/js/main.c1930eba.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\nimport {getAnalytics} from \"firebase/analytics\";\nimport {getFirestore} from \"firebase/firestore\";\nimport {getAuth, GoogleAuthProvider} from \"firebase/auth\";\nimport {getStorage} from \"firebase/storage\";\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCGerFrxYZ2_MfRCURUdsqMuD2-9V-B7g4\",\n\tauthDomain: \"readbooks-164200.firebaseapp.com\",\n\tdatabaseURL: \"https://readbooks-164200.firebaseio.com\",\n\tprojectId: \"readbooks-164200\",\n\tstorageBucket: \"readbooks-164200.appspot.com\",\n\tmessagingSenderId: \"451518411017\",\n\tappId: \"1:451518411017:web:cced9b89a6030da16963d8\",\n\tmeasurementId: \"G-8WQD7EGSVQ\"\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const fbAnalytics = getAnalytics(firebaseApp);\nexport const fbDB = getFirestore(firebaseApp);\nexport const fbAuth = getAuth(firebaseApp);\nexport const fbStorage = getStorage(firebaseApp)\nexport const googleAuthProvider = new GoogleAuthProvider();","\nexport const SCREEN_MODE_INIT = \"init\";\nexport const SCREEN_MODE_SIGN_IN = \"sign-in\";\nexport const SCREEN_MODE_USER_RANK = \"user-rank\";\n\nexport const ACTION_CHANGE_MODE = \"change-mode\";\nexport const ACTION_USER_RANK_DATA_RECEIVED = \"user-rank-data-received\";","import {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK} from \"../const\";\nimport {fbAuth, googleAuthProvider} from \"../firebase/features\";\nimport {GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\nimport {useSelector, useDispatch} from \"react-redux\";\n\n\nfunction Signin() {\n\tconst mode = useSelector((state) => state.mode);\n\tconst dispatch = useDispatch();\n\tconsole.log('signin render()', mode)\n\tif (mode !== SCREEN_MODE_SIGN_IN) {\n\t\tconsole.log(\"signin hidden return\")\n\t\treturn (\n\t\t\t<div className=\"hidden\"/>\n\t\t)\n\t}\n\tconsole.log(\"signin general return\")\n\treturn (\n\t\t<div>\n\t\t\t<h1>Sign in screen</h1>\n\t\t\t<button onClick={\n\t\t\t\t()=> {\n\t\t\t\t\tsignInWithPopup(fbAuth, googleAuthProvider)\n\t\t\t\t\t\t.then((result) => {\n\t\t\t\t\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\t\t\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\t\t\t\t\tconst token = credential.accessToken;\n\t\t\t\t\t\t\t// The signed-in user info.\n\t\t\t\t\t\t\tconst user = result.user;\n\t\t\t\t\t\t\t// ...\n\t\t\t\t\t\t\tconsole.log(\"로그인 완료~!!\", user)\n\t\t\t\t\t\t\tdispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_USER_RANK})\n\t\t\t\t\t\t}).catch((error) => {\n\t\t\t\t\t\t\t// Handle Errors here.\n\t\t\t\t\t\t\tconst errorCode = error.code;\n\t\t\t\t\t\t\tconst errorMessage = error.message;\n\t\t\t\t\t\t\t// The email of the user's account used.\n\t\t\t\t\t\t\tconst email = error.email;\n\t\t\t\t\t\t\t// The AuthCredential type that was used.\n\t\t\t\t\t\t\tconst credential = GoogleAuthProvider.credentialFromError(error);\n\t\t\t\t\t\t\tconsole.log('error=>', errorCode, errorMessage, email, credential)\n\t\t\t\t\t\t\tconsole.log(\"로그인 실패~!!\")\n\t\t\t\t\t});\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}>Google 로 로그인</button>\n\t\t</div>\n\t)\n}\n\nexport default Signin;","import {Component, useEffect, useState} from \"react\";\nimport {getDownloadURL, ref} from \"firebase/storage\";\nimport {fbStorage} from \"../firebase/features\";\n\n\nconst UserImageItem = (userItem) =>  {\n    console.log(\"UserImageItem =>\", userItem.userItem);\n    const [imageUrl, setImageUrl] = useState(null);\n\n    useEffect(() => {\n        let storageRef = ref(fbStorage, `/profile_thumbnails/${userItem.userItem.email}_${userItem.userItem.profileId}.png`)\n\n        getDownloadURL(storageRef).then(value => {\n            console.log('download_url=', value)\n            setImageUrl(value)\n        });\n    }, []);\n\n    console.log('UserImageItem render =>', imageUrl);\n    if (imageUrl) {\n        return (\n            <div className=\"UserImageDiv\">\n                <h2>{userItem.userItem.email}</h2>\n                <h4>{userItem.userItem.read}권 읽음</h4>\n                <img src={imageUrl} className=\"UserImage\" alt=\"\"/>\n            </div>\n        );\n    } else {\n        return <div/>;\n    }\n}\n\n\n/*class UserImageItem extends Component {\n    state = {\n        imageUrl: null\n    }\n\n    componentDidMount() {\n        console.log('UserImageItem componentDidMount =>', this.props.data, fbStorage);\n        let storageRef = ref(fbStorage, `/profile_thumbnails/${this.props.data.email}_${this.props.data.profileId}.png`)\n        console.log('storageRef=', storageRef)\n\n        getDownloadURL(storageRef).then(value => {\n            console.log('download_url=', value)\n            this.setState({imageUrl: value})\n        });\n    }\n\n    render() {\n        console.log('UserImageItem render =>', this.state.imageUrl);\n        if (this.state.imageUrl) {\n            return (\n                <div className=\"UserImageDiv\">\n                    <h2>{this.props.data.email}</h2>\n                    <h4>{this.props.data.read}권 읽음</h4>\n                    <img src={this.state.imageUrl} className=\"UserImage\" alt=\"\"/>\n                </div>\n            );\n        } else {\n            return <div/>;\n        }\n    }\n}*/\n\nexport default UserImageItem","import UserImageItem from \"./UserImageItem\";\nimport {ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_USER_RANK} from \"../const\";\nimport {collection, getDocs, limit, orderBy, query, where} from \"firebase/firestore\";\nimport {fbDB} from \"../firebase/features\";\nimport { useSelector, useDispatch } from 'react-redux';\n\n\nasync function queryCallAsync() {\n  const q = query(collection(fbDB, \"UserRank/Rank_Day_2021_11_19/Rank_Day_2021_11_19\"), where(\"read\", \">\", 0), orderBy(\"read\", \"desc\"), limit(10));\n  return await getDocs(q)\n}\n\nfunction LoadData(dispatch) {\n\n  queryCallAsync().then(r => {\n    let userRanks = [];\n    r.forEach((doc) => {\n      const data = doc.data();\n      userRanks.push(data);\n\n    });\n\n    dispatch({type: ACTION_USER_RANK_DATA_RECEIVED, userRankList: userRanks});\n  });\n}\n\n\nfunction UserImageList () {\n    const mode = useSelector((state) => state.mode);\n    const userRankList = useSelector((state) => state.userRankList);\n    const dispatch = useDispatch();\n\n    console.log('UserImageList render() =>', mode, userRankList);\n\n    if (mode !== SCREEN_MODE_USER_RANK) {\n      return (\n          <div className=\"hidden\"/>\n      )\n    }\n\n    if (userRankList === null) {\n      LoadData(dispatch);\n      return (\n          <div>\n            <h1>사용자 랭킹 데이타 로딩중...</h1>\n          </div>\n      )\n    }\n\n    let userItems = [];\n    let i = 0;\n    while (i < userRankList.length) {\n      const _data = userRankList[i];\n      const item = <UserImageItem key={\"\" + i} userItem={_data}/>\n      userItems.push(item);\n      i = i + 1;\n    }\n\n    console.log('userItems=', userItems);\n    return (\n        <div>\n          <ul>\n            {userItems}\n          </ul>\n        </div>\n    )\n}\n\nexport default UserImageList","import './App.css';\n\nimport {fbAuth} from \"./firebase/features\";\nimport {useEffect, useState} from \"react\";\nimport {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK} from \"./const\";\nimport Signin from \"./components/Signin\";\nimport UserImageList from \"./components/UserImageList\";\nimport {useDispatch} from \"react-redux\";\n\nconsole.log(\"currentUser=\", fbAuth.currentUser)\n\n\nconst useFirebaseAuthentication = () => {\n    const [authUser, setAuthUser] = useState(null);\n\n    useEffect(() =>{\n        const unlisten = fbAuth.onAuthStateChanged(\n            authUser => {\n                console.log(\"authUser=>\", authUser);\n\n                authUser\n                    ? setAuthUser(authUser)\n                    : setAuthUser(null);\n            },\n        );\n        return () => {\n            unlisten();\n        }\n    }, []);\n\n    return authUser\n}\n\n\nfunction App() {\n    const dispatch = useDispatch();\n    const authUser = useFirebaseAuthentication();\n    console.log(\"app render()...\")\n\n    if (authUser === null) {\n        dispatch({type: ACTION_CHANGE_MODE,\n            mode: SCREEN_MODE_SIGN_IN})\n    } else {\n        dispatch({type: ACTION_CHANGE_MODE,\n            mode: SCREEN_MODE_USER_RANK})\n    }\n    return (\n        <div className=\"App\">\n            <button onClick={()=>{\n                fbAuth.signOut().then((result)=> {\n                    console.log(\"signed out~!!\");\n                    dispatch({\n                        type: ACTION_CHANGE_MODE,\n                        mode: SCREEN_MODE_SIGN_IN\n                    });\n                }).catch((error)=> {\n                    console.log(\"signed out failed~!!!\", error)\n                });\n            }}>\n                로그아웃\n            </button>\n          <Signin/>\n          <UserImageList/>\n        </div>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createStore} from 'redux'\nimport {ACTION_CHANGE_MODE, ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_INIT} from \"../const\";\n\nfunction reducer(state, action) {\n\tconsole.log(\"reducer called~!\", state, action)\n\tif (state === undefined) {\n\t\treturn {\n\t\t\tmode: SCREEN_MODE_INIT,\n\t\t\tuserRankList: null\n\t\t}\n\t}\n\n\tlet newState;\n\tif (action.type === ACTION_CHANGE_MODE) {\n\t\tnewState = Object.assign({}, state, {\n\t\t\tmode: action.mode\n\t\t})\n\t}\n\n\tif (action.type === ACTION_USER_RANK_DATA_RECEIVED) {\n\t\tnewState = Object.assign({}, state, {\n\t\t\tuserRankList: action.userRankList\n\t\t})\n\t}\n\treturn newState;\n}\n\nconst reduxStore = createStore(reducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default reduxStore;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport reduxStore from \"./redux/store\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={reduxStore}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/UserImageItem.js","components/UserImageList.js","App.js","reportWebVitals.js","index.js"],"names":["UserImageItem","state","imageUrl","storage","getStorage","console","log","this","props","data","storageRef","ref","email","profileId","getDownloadURL","then","value","setState","className","read","src","Component","UserImageList","userItems","i","length","_data","item","push","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","getAnalytics","getFirestore","auth","getAuth","provider","GoogleAuthProvider","a","q","query","collection","where","orderBy","limit","getDocs","currentUser","signInWithPopup","result","credentialFromResult","accessToken","user","catch","error","code","message","credentialFromError","onAuthStateChanged","uid","App","userRankData","userImage","queryCallAsync","r","userRanks","forEach","doc","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed7a648f.chunk.js","sourcesContent":["import {Component} from \"react\";\nimport {getDownloadURL, ref} from \"firebase/storage\";\n\nimport {getStorage} from \"firebase/storage\";\n\nclass UserImageItem extends Component {\n    state = {\n        imageUrl: null\n    }\n\n    componentDidMount() {\n        const storage = getStorage()\n        console.log('UserImageItem componentDidMount =>', this.props.data, storage);\n        let storageRef = ref(storage, `/profile_thumbnails/${this.props.data.email}_${this.props.data.profileId}.png`)\n        console.log('storageRef=', storageRef)\n\n        getDownloadURL(storageRef).then(value => {\n            console.log('download_url=', value)\n            this.setState({imageUrl: value})\n        });\n    }\n\n    render() {\n        console.log('UserImageItem render =>', this.state.imageUrl);\n        if (this.state.imageUrl) {\n            return (\n                <div className=\"UserImageDiv\">\n                    <h2>{this.props.data.email}</h2>\n                    <h4>{this.props.data.read}권 읽음</h4>\n                    <img src={this.state.imageUrl} className=\"UserImage\"/>\n                </div>\n            );\n        } else {\n            return <div/>;\n        }\n    }\n}\n\nexport default UserImageItem","import {Component} from \"react\";\nimport UserImageItem from \"./UserImageItem\";\n\nclass UserImageList extends Component {\n  render() {\n    console.log('UserImageList render =>', this.props.data);\n    this.userItems = []\n    let i = 0;\n    while (i < this.props.data.length) {\n      const _data = this.props.data[i]\n      const item = <UserImageItem key={\"\" + i} data={_data}/>\n      this.userItems.push(item)\n      i = i + 1;\n    }\n\n    return (\n        <ul>\n          {this.userItems}\n        </ul>\n    )\n  }\n}\n\nexport default UserImageList","import './App.css';\n\nimport {initializeApp} from \"firebase/app\";\nimport {getAnalytics} from \"firebase/analytics\";\nimport {collection, getDocs, getFirestore, limit, orderBy, query, where} from \"firebase/firestore\";\nimport {getAuth, GoogleAuthProvider, onAuthStateChanged, signInWithPopup} from \"firebase/auth\";\nimport UserImageList from \"./components/UserImageList\";\nimport {Component} from \"react\";\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCGerFrxYZ2_MfRCURUdsqMuD2-9V-B7g4\",\n  authDomain: \"readbooks-164200.firebaseapp.com\",\n  databaseURL: \"https://readbooks-164200.firebaseio.com\",\n  projectId: \"readbooks-164200\",\n  storageBucket: \"readbooks-164200.appspot.com\",\n  messagingSenderId: \"451518411017\",\n  appId: \"1:451518411017:web:cced9b89a6030da16963d8\",\n  measurementId: \"G-8WQD7EGSVQ\"\n};\n\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\nconst db = getFirestore(app);\nconst auth = getAuth(app);\nconst provider = new GoogleAuthProvider();\n\nconsole.log(\"currentUser=\", auth.currentUser)\n\nif (auth.currentUser === null) {\n  signInWithPopup(auth, provider)\n    .then((result) => {\n      // This gives you a Google Access Token. You can use it to access the Google API.\n      const credential = GoogleAuthProvider.credentialFromResult(result);\n      const token = credential.accessToken;\n      // The signed-in user info.\n      const user = result.user;\n      // ...\n    }).catch((error) => {\n    // Handle Errors here.\n    const errorCode = error.code;\n    const errorMessage = error.message;\n    // The email of the user's account used.\n    const email = error.email;\n    // The AuthCredential type that was used.\n    const credential = GoogleAuthProvider.credentialFromError(error);\n    // ...\n  });\n}\n\nonAuthStateChanged(auth, (user) => {\n  if (user) {\n    const uid = user.uid;\n    console.log('uid=', uid, user.email);\n  } else {\n    console.log('signed out')\n  }\n});\n\n\nasync function queryCallAsync() {\n  const q = query(collection(db, \"UserRank/Rank_Day_2021_11_19/Rank_Day_2021_11_19\"), where(\"read\", \">\", 0), orderBy(\"read\", \"desc\"), limit(10));\n  return await getDocs(q)\n}\n\nclass App extends Component {\n  state = {\n    userRankData: null\n  }\n  userImage = <div/>\n\n  componentDidMount() {\n    queryCallAsync().then(r => {\n      const userRanks = [];\n      r.forEach((doc) => {\n        const data = doc.data();\n        userRanks.push(data);\n      });\n      this.userImage = <UserImageList data={userRanks}/>\n      this.setState({userRankData: userRanks});\n    })\n  }\n\n  render() {\n    console.log(\"app render\")\n    return (\n        <div className=\"App\">\n          {this.userImage}\n        </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["firebase/features.js","const.js","redux/store.js","components/Signin.js","components/UserImageItem.js","components/UserImageList.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fbDB","getAnalytics","getFirestore","fbAuth","getAuth","fbStorage","getStorage","googleAuthProvider","GoogleAuthProvider","SCREEN_MODE_SIGN_IN","SCREEN_MODE_USER_RANK","ACTION_CHANGE_MODE","reduxStore","createStore","state","action","console","log","undefined","mode","userRankList","type","newState","Object","assign","window","__REDUX_DEVTOOLS_EXTENSION__","googleSignIn","signInWithPopup","then","result","credentialFromResult","accessToken","user","dispatch","catch","error","errorCode","code","errorMessage","message","email","credential","credentialFromError","Signin","props","subscribe","render","reduxState","getState","className","onClick","Component","UserImageItem","imageUrl","this","data","storageRef","ref","profileId","getDownloadURL","value","setState","read","src","alt","a","q","query","collection","where","orderBy","limit","getDocs","UserImageList","bind","queryCallAsync","r","userRanks","forEach","doc","push","userItems","i","length","_data","item","signOut","currentUser","onAuthStateChanged","uid","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0232f83.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\nimport {getAnalytics} from \"firebase/analytics\";\nimport {getFirestore} from \"firebase/firestore\";\nimport {getAuth, GoogleAuthProvider} from \"firebase/auth\";\nimport {getStorage} from \"firebase/storage\";\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCGerFrxYZ2_MfRCURUdsqMuD2-9V-B7g4\",\n\tauthDomain: \"readbooks-164200.firebaseapp.com\",\n\tdatabaseURL: \"https://readbooks-164200.firebaseio.com\",\n\tprojectId: \"readbooks-164200\",\n\tstorageBucket: \"readbooks-164200.appspot.com\",\n\tmessagingSenderId: \"451518411017\",\n\tappId: \"1:451518411017:web:cced9b89a6030da16963d8\",\n\tmeasurementId: \"G-8WQD7EGSVQ\"\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const fbAnalytics = getAnalytics(firebaseApp);\nexport const fbDB = getFirestore(firebaseApp);\nexport const fbAuth = getAuth(firebaseApp);\nexport const fbStorage = getStorage(firebaseApp)\nexport const googleAuthProvider = new GoogleAuthProvider();","\nexport const SCREEN_MODE_INIT = \"init\";\nexport const SCREEN_MODE_SIGN_IN = \"sign-in\";\nexport const SCREEN_MODE_USER_RANK = \"user-rank\";\n\nexport const ACTION_CHANGE_MODE = \"change-mode\";\nexport const ACTION_USER_RANK_DATA_RECEIVED = \"user-rank-data-received\";","import { createStore} from 'redux'\nimport {ACTION_CHANGE_MODE, ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_INIT} from \"../const\";\n\nfunction reducer(state, action) {\n\tconsole.log(\"reducer called~!\", state, action)\n\tif (state === undefined) {\n\t\treturn {\n\t\t\tmode: SCREEN_MODE_INIT,\n\t\t\tuserRankList: null\n\t\t}\n\t}\n\n\tlet newState;\n\tif (action.type === ACTION_CHANGE_MODE) {\n\t\tnewState = Object.assign({}, state, {\n\t\t\tmode: action.mode\n\t\t})\n\t}\n\n\tif (action.type === ACTION_USER_RANK_DATA_RECEIVED) {\n\t\tnewState = Object.assign({}, state, {\n\t\t\tuserRankList: action.userRankList\n\t\t})\n\t}\n\treturn newState;\n}\n\nconst reduxStore = createStore(reducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nexport default reduxStore;","import {Component} from \"react\";\nimport {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK} from \"../const\";\nimport reduxStore from \"../redux/store\";\nimport {fbAuth, googleAuthProvider} from \"../firebase/features\";\nimport {GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\n\nfunction googleSignIn() {\n\tsignInWithPopup(fbAuth, googleAuthProvider)\n\t\t.then((result) => {\n\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\tconst token = credential.accessToken;\n\t\t\t// The signed-in user info.\n\t\t\tconst user = result.user;\n\t\t\t// ...\n\t\t\tconsole.log(\"로그인 완료~!!\")\n\t\t\treduxStore.dispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_USER_RANK})\n\t\t}).catch((error) => {\n\t\t// Handle Errors here.\n\t\tconst errorCode = error.code;\n\t\tconst errorMessage = error.message;\n\t\t// The email of the user's account used.\n\t\tconst email = error.email;\n\t\t// The AuthCredential type that was used.\n\t\tconst credential = GoogleAuthProvider.credentialFromError(error);\n\t\tconsole.log('error=>', errorCode, errorMessage, email, credential)\n\t\tconsole.log(\"로그인 실패~!!\")\n\t});\n\treturn true;\n}\n\nclass Signin extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\treduxStore.subscribe(this.render)\n\t}\n\n\trender() {\n\t\tlet reduxState = reduxStore.getState();\n\t\tconsole.log('signin render()', reduxState.mode)\n\t\tif (reduxState.mode !== SCREEN_MODE_SIGN_IN) {\n\t\t\tconsole.log(\"signin hidden return\")\n\t\t\treturn (\n\t\t\t\t<div className=\"hidden\"/>\n\t\t\t)\n\t\t}\n\t\tconsole.log(\"signin general return\")\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h1>Sign in screen</h1>\n\t\t\t\t<button onClick={\n\t\t\t\t\tgoogleSignIn\n\t\t\t\t}>Google 로 로그인</button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nexport default Signin;","import {Component} from \"react\";\nimport {getDownloadURL, ref} from \"firebase/storage\";\nimport {fbStorage} from \"../firebase/features\";\n\nclass UserImageItem extends Component {\n    state = {\n        imageUrl: null\n    }\n\n    componentDidMount() {\n        console.log('UserImageItem componentDidMount =>', this.props.data, fbStorage);\n        let storageRef = ref(fbStorage, `/profile_thumbnails/${this.props.data.email}_${this.props.data.profileId}.png`)\n        console.log('storageRef=', storageRef)\n\n        getDownloadURL(storageRef).then(value => {\n            console.log('download_url=', value)\n            this.setState({imageUrl: value})\n        });\n    }\n\n    render() {\n        console.log('UserImageItem render =>', this.state.imageUrl);\n        if (this.state.imageUrl) {\n            return (\n                <div className=\"UserImageDiv\">\n                    <h2>{this.props.data.email}</h2>\n                    <h4>{this.props.data.read}권 읽음</h4>\n                    <img src={this.state.imageUrl} className=\"UserImage\" alt=\"\"/>\n                </div>\n            );\n        } else {\n            return <div/>;\n        }\n    }\n}\n\nexport default UserImageItem","import {Component} from \"react\";\nimport UserImageItem from \"./UserImageItem\";\nimport reduxStore from \"../redux/store\";\nimport {ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_USER_RANK} from \"../const\";\nimport {collection, getDocs, limit, orderBy, query, where} from \"firebase/firestore\";\nimport {fbDB} from \"../firebase/features\";\n\nasync function queryCallAsync() {\n  const q = query(collection(fbDB, \"UserRank/Rank_Day_2021_11_19/Rank_Day_2021_11_19\"), where(\"read\", \">\", 0), orderBy(\"read\", \"desc\"), limit(10));\n  return await getDocs(q)\n}\n\nclass UserImageList extends Component {\n  state = {\n    userRankList: null\n  }\n\n  constructor(props) {\n    super(props);\n    reduxStore.subscribe(this.render.bind(this));\n  }\n\n  componentDidMount() {\n\n    if (this.state.userRankList === null) {\n      queryCallAsync().then(r => {\n        let userRanks = [];\n        r.forEach((doc) => {\n          const data = doc.data();\n          userRanks.push(data);\n\n        });\n\n        this.setState({userRankList: userRanks})\n        // reduxStore.dispatch({type: ACTION_USER_RANK_DATA_RECEIVED, userRankList: userRanks});\n      });\n    }\n  }\n\n  render() {\n    let reduxState = reduxStore.getState();\n\n    console.log('UserImageList render() =>', reduxState.mode, reduxState.userRankList);\n\n    if (reduxState.mode !== SCREEN_MODE_USER_RANK) {\n      return (\n          <div className=\"hidden\"/>\n      )\n    }\n\n    if (this.state.userRankList === null) {\n      return (\n          <div>\n            <h1>사용자 랭킹 데이타 로딩중...</h1>\n          </div>\n      )\n    }\n\n    let userItems = [];\n    let i = 0;\n    while (i < this.state.userRankList.length) {\n      const _data = this.state.userRankList[i];\n      const item = <UserImageItem key={\"\" + i} data={_data}/>\n      userItems.push(item);\n      i = i + 1;\n    }\n\n    console.log('userItems=', userItems);\n    return (\n        <div>\n          <ul>\n            {userItems}\n          </ul>\n        </div>\n    )\n  }\n}\n\nexport default UserImageList","import './App.css';\n\nimport {fbAuth} from \"./firebase/features\";\nimport {onAuthStateChanged} from \"firebase/auth\";\nimport {Component} from \"react\";\nimport reduxStore from \"./redux/store\";\nimport {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK} from \"./const\";\nimport Signin from \"./components/Signin\";\nimport UserImageList from \"./components/UserImageList\";\n\nconsole.log(\"currentUser=\", fbAuth.currentUser)\n\n// if (fbAuth.currentUser === null) {\n//   reduxStore.dispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_SIGN_IN})\n// }\n\nonAuthStateChanged(fbAuth, (user) => {\n  if (user) {\n    const uid = user.uid;\n    console.log('uid=', uid, user.email);\n    reduxStore.dispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_USER_RANK})\n  } else {\n    console.log('Need signin~!!')\n    reduxStore.dispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_SIGN_IN})\n  }\n});\n\n\nfunction signOut() {\n    fbAuth.signOut().then((result)=> {\n        console.log(\"signed out~!!\");\n        reduxStore.dispatch({\n            type: ACTION_CHANGE_MODE,\n            mode: SCREEN_MODE_SIGN_IN\n        });\n    }).catch((error)=> {\n        console.log(\"signed out failed~!!!\", error)\n    });\n}\n\nclass App extends Component {\n\n    render() {\n        console.log(\"app render()...\")\n        return (\n            <div className=\"App\">\n              <button onClick={signOut}>로그아웃</button>\n              <Signin/>\n              <UserImageList/>\n            </div>\n        );\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["firebase/features.js","const.js","hooks/reducer.js","components/Signin.js","components/UserItem.js","components/UserList.js","components/MyNav.js","App.js","reportWebVitals.js","index.js"],"names":["firebaseApp","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fbDB","getAnalytics","getFirestore","fbAuth","getAuth","fbStorage","getStorage","googleAuthProvider","GoogleAuthProvider","SCREEN_MODE_SIGN_IN","SCREEN_MODE_USER_RANK_DAILY","SCREEN_MODE_USER_RANK_WEEKLY","SCREEN_MODE_USER_RANK_MONTHLY","SCREEN_MODE_GOOD_WRITER","SCREEN_MODE_BEST_READER","ACTION_CHANGE_MODE","ACTION_USER_RANK_DATA_RECEIVED","MyContext","React","createContext","initValues","mode","userRankList","stateReducer","state","action","newState","console","log","type","Object","assign","Signin","useContext","dispatch","className","Button","onClick","signInWithPopup","then","result","token","credentialFromResult","accessToken","user","catch","error","errorCode","code","errorMessage","message","email","credential","credentialFromError","login","UserItem","userItem","useState","imageUrl","setImageUrl","useEffect","storageRef","ref","profileId","getDownloadURL","value","like","read","src","alt","getWeekOfYear","currentDate","oneJan","Date","getFullYear","numberOfDays","Math","floor","ceil","getDay","a","date","path","q","getMonth","getDate","query","collection","where","orderBy","limit","getDocs","LoadData","queryCallAsync","r","userRanks","forEach","doc","data","push","window","localStorage","setItem","JSON","stringify","UserList","userList","parse","getItem","userItems","i","length","_data","item","MyNav","currentMode","Navbar","bg","variant","Container","Brand","href","Nav","activeKey","onSelect","selectedKey","Item","Link","eventKey","App","useReducer","undefined","authUser","setAuthUser","unlisten","onAuthStateChanged","useFirebaseAuthentication","Provider","signOut","logout","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.043bd2ce.chunk.js","sourcesContent":["import {initializeApp} from \"firebase/app\";\nimport {getAnalytics} from \"firebase/analytics\";\nimport {getFirestore} from \"firebase/firestore\";\nimport {getAuth, GoogleAuthProvider} from \"firebase/auth\";\nimport {getStorage} from \"firebase/storage\";\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyCGerFrxYZ2_MfRCURUdsqMuD2-9V-B7g4\",\n\tauthDomain: \"readbooks-164200.firebaseapp.com\",\n\tdatabaseURL: \"https://readbooks-164200.firebaseio.com\",\n\tprojectId: \"readbooks-164200\",\n\tstorageBucket: \"readbooks-164200.appspot.com\",\n\tmessagingSenderId: \"451518411017\",\n\tappId: \"1:451518411017:web:cced9b89a6030da16963d8\",\n\tmeasurementId: \"G-8WQD7EGSVQ\"\n};\n\nexport const firebaseApp = initializeApp(firebaseConfig);\nexport const fbAnalytics = getAnalytics(firebaseApp);\nexport const fbDB = getFirestore(firebaseApp);\nexport const fbAuth = getAuth(firebaseApp);\nexport const fbStorage = getStorage(firebaseApp)\nexport const googleAuthProvider = new GoogleAuthProvider();","\nexport const SCREEN_MODE_INIT = \"init\";\nexport const SCREEN_MODE_SIGN_IN = \"sign-in\";\nexport const SCREEN_MODE_USER_RANK_DAILY = \"user-rank-daily\";\nexport const SCREEN_MODE_USER_RANK_WEEKLY = \"user-rank-weekly\";\nexport const SCREEN_MODE_USER_RANK_MONTHLY = \"user-rank-monthly\";\nexport const SCREEN_MODE_GOOD_WRITER = \"good-writer\";\nexport const SCREEN_MODE_FAMOUS_BOOK = \"famous-book\";\nexport const SCREEN_MODE_RECENT_REVIEW = \"recent-review\";\nexport const SCREEN_MODE_BEST_READER = \"best-reader\";\nexport const SCREEN_MODE_FIND_USER = \"find-user\";\n\nexport const ACTION_CHANGE_MODE = \"change-mode\";\nexport const ACTION_USER_RANK_DATA_RECEIVED = \"user-rank-data-received\";","import React from 'react';\nimport {ACTION_CHANGE_MODE, ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_INIT} from \"../const\";\n\nexport const MyContext = React.createContext({});\n\nexport const initValues = {\n\tmode: SCREEN_MODE_INIT,\n\tuserRankList: null\n}\n\nexport const stateReducer = (state, action) => {\n\tconsole.log(\"reducer called~!\", state, action);\n\tlet newState;\n\tswitch (action.type) {\n\t\tcase ACTION_CHANGE_MODE: {\n\t\t\tnewState = Object.assign({}, state, {\n\t\t\t\tmode: action.mode\n\t\t\t})\n\t\t\tbreak;\n\t\t}\n\t\tcase ACTION_USER_RANK_DATA_RECEIVED: {\n\t\t\tnewState = Object.assign({}, state, {\n\t\t\t\tuserRankList: action.userRankList\n\t\t\t})\n\t\t\tbreak;\n\t\t}\n\t\tdefault:\n\t\t\tnewState = initValues;\n\t}\n\tconsole.log(\"reducer return ===>\", newState);\n\treturn newState;\n}\n\nexport default stateReducer;","import {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK_DAILY} from \"../const\";\nimport {fbAuth, googleAuthProvider} from \"../firebase/features\";\nimport {GoogleAuthProvider, signInWithPopup} from \"firebase/auth\";\nimport {useContext} from \"react\";\nimport {MyContext} from \"../hooks/reducer\";\nimport Button from \"react-bootstrap/Button\";\n\n\nconst login = (dispatch) => {\n\tsignInWithPopup(fbAuth, googleAuthProvider)\n\t\t.then((result) => {\n\t\t\t// This gives you a Google Access Token. You can use it to access the Google API.\n\t\t\tconst credential = GoogleAuthProvider.credentialFromResult(result);\n\t\t\tconst token = credential.accessToken;\n\t\t\t// The signed-in user info.\n\t\t\tconst user = result.user;\n\t\t\t// ...\n\t\t\tconsole.log(\"로그인 완료~!!\", user, token);\n\t\t\tdispatch({type: ACTION_CHANGE_MODE, mode: SCREEN_MODE_USER_RANK_DAILY})\n\t\t}).catch((error) => {\n\t\t// Handle Errors here.\n\t\tconst errorCode = error.code;\n\t\tconst errorMessage = error.message;\n\t\t// The email of the user's account used.\n\t\tconst email = error.email;\n\t\t// The AuthCredential type that was used.\n\t\tconst credential = GoogleAuthProvider.credentialFromError(error);\n\t\tconsole.log('error=>', errorCode, errorMessage, email, credential);\n\t\tconsole.log(\"로그인 실패~!!\");\n\t});\n}\n\n\nconst Signin = () => {\n\t// const [state, dispatch] = useReducer(stateReducer, initValues, undefined);\n\tconst {state, dispatch} = useContext(MyContext);\n\tconsole.log('Signin state=>', state);\n\n\tconst mode = state.mode;\n\n\tconsole.log('signin render()', mode)\n\tif (mode !== SCREEN_MODE_SIGN_IN) {\n\t\tconsole.log(\"signin hidden return\")\n\t\treturn (\n\t\t\t<div className=\"hidden\"/>\n\t\t)\n\t}\n\tconsole.log(\"signin general return\")\n\treturn (\n\t\t<div>\n\t\t\t<h1>Sign in screen</h1>\n\t\t\t<Button onClick={\n\t\t\t\t()=> {\n\t\t\t\t\tlogin(dispatch);\n\t\t\t\t}\n\t\t\t}>Google 로 로그인</Button>\n\t\t</div>\n\t)\n}\n\nexport default Signin;","import {useEffect, useState} from \"react\";\nimport {getDownloadURL, ref} from \"firebase/storage\";\nimport {fbStorage} from \"../firebase/features\";\n\n\nconst UserItem = ({userItem}) =>  {\n    const [imageUrl, setImageUrl] = useState(null);\n    console.log(\"UserItem =>\", userItem);\n\n    useEffect(() => {\n        let storageRef = ref(fbStorage, `/profile_thumbnails/${userItem.email}_${userItem.profileId}.png`)\n\n        getDownloadURL(storageRef).then(value => {\n            console.log('download_url=', value)\n            setImageUrl(value)\n        });\n    }, [userItem]);\n\n    console.log('UserItem render =>', imageUrl);\n    if (imageUrl) {\n        return (\n            <div className=\"UserImageDiv\">\n                <h2>{userItem.email}</h2>\n                <h4>{userItem.like ? `${userItem.like} 좋아요`:`${userItem.read}권 읽음`}</h4>\n                <img src={imageUrl} className=\"UserImage\" alt=\"\"/>\n            </div>\n        );\n    } else {\n        return <div/>;\n    }\n}\n\nexport default UserItem","import UserItem from \"./UserItem\";\nimport {\n    ACTION_USER_RANK_DATA_RECEIVED, SCREEN_MODE_BEST_READER, SCREEN_MODE_GOOD_WRITER,\n    SCREEN_MODE_USER_RANK_DAILY,\n    SCREEN_MODE_USER_RANK_MONTHLY,\n    SCREEN_MODE_USER_RANK_WEEKLY\n} from \"../const\";\nimport {collection, getDocs, limit, orderBy, query, where} from \"firebase/firestore\";\nimport {fbDB} from \"../firebase/features\";\nimport {useContext} from \"react\";\nimport {MyContext} from \"../hooks/reducer\";\nimport useLocalStorage from \"../useLocalStorage\";\n\n\nconst getWeekOfYear = (currentDate) => {\n    const oneJan = new Date(currentDate.getFullYear(),0,1);\n    const numberOfDays = Math.floor((currentDate - oneJan) / (24 * 60 * 60 * 1000));\n    return Math.ceil((currentDate.getDay() + 1 + numberOfDays) / 7);\n}\n\nasync function queryCallAsync(mode) {\n    const date = new Date();\n    let path = ``;\n    let q = null;\n\n    if (mode === SCREEN_MODE_USER_RANK_DAILY) {\n        path = `UserRank/Rank_Day_${date.getFullYear()}_${date.getMonth() + 1}_${date.getDate()}/Rank_Day_${date.getFullYear()}_${date.getMonth() + 1}_${date.getDate()}`;\n    } else if (mode === SCREEN_MODE_USER_RANK_WEEKLY) {\n        path = `UserRank/Rank_Week_${date.getFullYear()}_${getWeekOfYear(date)}/Rank_Week_${date.getFullYear()}_${getWeekOfYear(date)}`;\n    } else if (mode === SCREEN_MODE_USER_RANK_MONTHLY) {\n        path = `UserRank/Rank_Month_${date.getFullYear()}_${date.getMonth() + 1}/Rank_Month_${date.getFullYear()}_${date.getMonth() + 1}`;\n    } else if (mode === SCREEN_MODE_BEST_READER) {\n        path = `ClientInfoDataBase`;\n    } else if (mode === SCREEN_MODE_GOOD_WRITER) {\n        path = \"ClientInfoDataBase\";\n        q = query(collection(fbDB, path), where(\"like\", \">\", 0), orderBy(\"like\", \"desc\"), limit(20));\n    }\n    console.log(\"query path = \", path);\n    if (q === null)\n        q = query(collection(fbDB, path), where(\"read\", \">\", 0), orderBy(\"read\", \"desc\"), limit(20));\n    return await getDocs(q)\n}\n\nconst LoadData = (mode, dispatch) => {\n\n  queryCallAsync(mode).then(r => {\n    let userRanks = [];\n    r.forEach((doc) => {\n      const data = doc.data();\n      userRanks.push(data);\n\n    });\n    window.localStorage.setItem(mode, JSON.stringify(userRanks));\n    dispatch({type: ACTION_USER_RANK_DATA_RECEIVED, userRankList: userRanks});\n  });\n}\n\n\nconst UserList = () => {\n    const {state, dispatch} = useContext(MyContext);\n    console.log('UserList state=>', state);\n    const mode = state.mode;\n\n    const userList = JSON.parse(window.localStorage.getItem(mode));\n    console.log('################ UserList render() userList=>', mode, userList);\n\n    if (mode !== SCREEN_MODE_USER_RANK_DAILY && mode !== SCREEN_MODE_USER_RANK_MONTHLY && mode !== SCREEN_MODE_USER_RANK_WEEKLY\n        && mode !== SCREEN_MODE_BEST_READER && mode !== SCREEN_MODE_GOOD_WRITER) {\n      return (\n          <div className=\"hidden\"/>\n      )\n    }\n\n    if (userList === null) {\n      LoadData(mode, dispatch);\n      return (\n          <div>\n            <h1>데이타 로딩중...</h1>\n          </div>\n      )\n    }\n\n    let userItems = [];\n    let i = 0;\n    while (i < userList.length) {\n      const _data = userList[i];\n      const item = <UserItem key={\"\" + i} userItem={_data}/>\n      userItems.push(item);\n      i = i + 1;\n    }\n\n    console.log('userItems=', userItems);\n    return (\n        <div>\n          <ul className=\"cont\">\n            {userItems}\n          </ul>\n        </div>\n    )\n}\n\nexport default UserList","import {Container, Nav, Navbar} from \"react-bootstrap\";\nimport {useContext} from \"react\";\nimport {MyContext} from \"../hooks/reducer\";\nimport {ACTION_CHANGE_MODE} from \"../const\";\n\n\nconst MyNav = () => {\n\tconst {state, dispatch} = useContext(MyContext);\n\tconst currentMode = state.mode;\n\tconsole.log(\"currentMode=\", currentMode, typeof(currentMode));\n\treturn (\n\t\t<>\n\t\t\t<Navbar bg=\"primary\" variant=\"dark\">\n\t\t\t\t<Container>\n\t\t\t\t\t<Navbar.Brand href=\"#home\">천권읽기 함께해요</Navbar.Brand>\n\t\t\t\t\t<Nav className=\"justify-content-center\"\n\t\t\t\t\t     variant=\"pills\"\n\t\t\t\t\t     activeKey= {currentMode}\n\t\t\t\t\t     onSelect={(selectedKey) => {\n\t\t\t\t\t\t\tconsole.log(\"selected key=>\", selectedKey);\n\t\t\t\t\t\t\tdispatch({type: ACTION_CHANGE_MODE, mode: selectedKey});\n\t\t\t\t\t\t }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"good-writer\">좋은 글을 쓰는 친구들</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"famous-book\">어린이 인기 도서</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"recent-review\">최근 리뷰</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"user-rank-daily\">오늘의 독서왕</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"user-rank-weekly\">주간 독서왕</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"user-rank-monthly\">월간 독서왕</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"best-reader\">책을 많이 읽은 친구들</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t\t<Nav.Item>\n\t\t\t\t\t\t\t<Nav.Link eventKey=\"find-user\">친구 찾기</Nav.Link>\n\t\t\t\t\t\t</Nav.Item>\n\t\t\t\t\t</Nav>\n\t\t\t\t</Container>\n\t\t\t</Navbar>\n\t\t\t{/*<br/>\n\t\t\t<Nav className=\"justify-content-center\"\n\t\t\t     variant=\"pills\"\n\t\t\t     activeKey=\"/home\"\n\t\t\t     onSelect={(selectedKey) => {\n\t\t\t\t\t console.log(\"selected key =>\", selectedKey);\n\t\t\t     }}\n\t\t\t>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-0\">홈</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-1\">좋은 글을 쓰는 친구들</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-2\">어린이 인기 도서</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-3\">최근 리뷰</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-4\">오늘의 독서왕</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-5\">주간 독서왕</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-6\">월간 독서왕</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-7\">책을 많이 읽은 친구들</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t\t<Nav.Item>\n\t\t\t\t\t<Nav.Link eventKey=\"link-8\">친구 찾기</Nav.Link>\n\t\t\t\t</Nav.Item>\n\t\t\t</Nav>*/}\n\t\t</>\n\n\n\t);\n}\n\nexport default MyNav;","import './App.css';\n\nimport {fbAuth} from \"./firebase/features\";\nimport {useEffect, useReducer, useState} from \"react\";\nimport {ACTION_CHANGE_MODE, SCREEN_MODE_SIGN_IN, SCREEN_MODE_USER_RANK_DAILY} from \"./const\";\nimport Signin from \"./components/Signin\";\nimport UserList from \"./components/UserList\";\nimport stateReducer, {initValues, MyContext} from \"./hooks/reducer\";\nimport Button from \"react-bootstrap/Button\";\nimport {Container} from \"react-bootstrap\";\nimport MyNav from \"./components/MyNav\";\n\n\nconst useFirebaseAuthentication = () => {\n    const [authUser, setAuthUser] = useState(null);\n\n    useEffect(() =>{\n        const unlisten = fbAuth.onAuthStateChanged(\n            authUser => {\n                console.log(\"authUser=>\", authUser);\n\n                authUser\n                    ? setAuthUser(authUser)\n                    : setAuthUser(null);\n            },\n        );\n        return () => {\n            unlisten();\n        }\n    }, []);\n\n    return authUser\n}\n\nconst logout = (dispatch) => {\n    fbAuth.signOut().then((result)=> {\n        console.log(\"signed out~!!\");\n        dispatch({\n            type: ACTION_CHANGE_MODE,\n            mode: SCREEN_MODE_SIGN_IN\n        });\n    }).catch((error)=> {\n        console.log(\"signed out failed~!!!\", error)\n    });\n}\n\n\nfunction App() {\n    const [state, dispatch] = useReducer(stateReducer, initValues, undefined);\n    console.log(\"App state=>\", state);\n    const authUser = useFirebaseAuthentication();\n\n    console.log(\"app render()...\", authUser)\n\n    useEffect(()=>{\n        if (authUser === null) {\n            dispatch({type: ACTION_CHANGE_MODE,\n                mode: SCREEN_MODE_SIGN_IN});\n        } else {\n            dispatch({type: ACTION_CHANGE_MODE,\n                mode: SCREEN_MODE_USER_RANK_DAILY});\n        }\n    }, [authUser]);\n\n    return (\n        <MyContext.Provider value={{state, dispatch}}>\n            <Container className=\"p-3\">\n                <Container className=\"p-5 mb-4 bg-light rounded-3\">\n                    <MyNav />\n                    <Button className=\"hidden\" onClick={()=>{\n                        logout(dispatch);\n                    }}>\n                        로그아웃\n                    </Button>\n                    <Signin/>\n                    <UserList/>\n                </Container>\n            </Container>\n        </MyContext.Provider>\n    );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}